#
evaluate str( ( ch_data("db_user","Config.ch"), ch_data("db_password","Config.ch"),ch_data("db_host","Config.ch"), ch_data("db_name","Config.ch")) )
define $TMP LASTRESULT
connect MySQL with $TMP

create table grh_worker with q9
create table grh_user with q1
create table grh_right with q2
create table grh_user_right_assoc with q3
create table grh_workerstation with q4
create table grh_status with q5
create table grh_worker_status_assoc with q6
create table grh_badge with q7
create table grh_event with q8
create table grh_folder with q10
create table grh_mobile with q11
create table grh_clockingtime with q12
create table grh_worker_badge_assoc with q13 
create table grh_worker_event_assoc with q14
create table grh_worker_workerstation_assoc with q15
create table grh_document with q16
create table grh_document_folder_assoc with q17
create table grh_config with q18
create table grh_notification with q19
execute query ir
execute query event
execute query status
execute query badge
execute query ic
commit
close database
#initialisation d'un utilisateur

SetVar *form_username admin
evaluate make_salt()
SetVar *passw_salt LASTRESULT
SetVar *form_password admin
evaluate crypt_pass({*form_password}, {*passw_salt})
SetVar *form_password LASTRESULT
SetVar *form_right_id 1
execute app/scripts/db/insert-user.gcs
execute app/scripts/db/make-last-user-admin.gcs

end

[q1]
create table if not exists grh_user(
    id integer PRIMARY KEY AUTO_INCREMENT,
    user_name varchar (60),
    passw blob,
    salt blob,
    statut integer (1) DEFAULT 1,
    last_connection_time timestamp,
    create_date timestamp DEFAULT CURRENT_TIMESTAMP,
    worker_id integer,
    foreign key (worker_id) references grh_worker(id)
    
    
)
[/q1]

[q2]
    create table if not exists grh_right(
    id integer PRIMARY KEY AUTO_INCREMENT,
    name_right varchar (60),
    statut integer (1) DEFAULT 1,
    create_date timestamp DEFAULT CURRENT_TIMESTAMP
    
)
[/q2]

[q3]
create table if not exists grh_user_right_assoc(
    id integer PRIMARY KEY AUTO_INCREMENT,
    id_right integer,
    id_user integer,
    date datetime,
    read_access integer (0) DEFAULT 0,
    write_access integer (0) DEFAULT 0,
    remove_access integer (0) DEFAULT 0,
    statut integer (1) DEFAULT 1,
    foreign key (id_user) references grh_user(id),
    foreign key (id_right) references grh_right(id), 
    create_date timestamp DEFAULT CURRENT_TIMESTAMP
    
)
[/q3]

[q4]
create table if not exists grh_workerstation(
 id integer PRIMARY KEY AUTO_INCREMENT,
 label varchar(100),
 statut integer (1) DEFAULT 1,
 create_date timestamp DEFAULT CURRENT_TIMESTAMP

)
[/q4]

[q5]
create table if not exists grh_status(
 id integer PRIMARY KEY AUTO_INCREMENT,
 type varchar(100),
 statut integer (1) DEFAULT 1,
 create_date timestamp DEFAULT CURRENT_TIMESTAMP

)
[/q5]

[q6]
create table if not exists grh_worker_status_assoc(
id integer PRIMARY KEY AUTO_INCREMENT,
id_worker integer,
id_status integer,
statut integer (1) DEFAULT 1,
foreign key (id_worker) references grh_worker(id),
foreign key (id_status) references grh_status(id),
create_date timestamp DEFAULT CURRENT_TIMESTAMP
)
[/q6]

[q7]
create table if not exists grh_badge(
id integer PRIMARY KEY AUTO_INCREMENT,
description varchar(100),
icon varchar(200),
statut integer (1) DEFAULT 1,
create_date timestamp DEFAULT CURRENT_TIMESTAMP
)
[/q7]

[q8]
create table if not exists grh_event(
id integer PRIMARY KEY AUTO_INCREMENT,
title varchar(60),
statut integer (1) DEFAULT 1,
foresight_date timestamp,
event_date timestamp  DEFAULT CURRENT_TIMESTAMP,
create_date timestamp DEFAULT CURRENT_TIMESTAMP
)
[/q8]

[q9]
 create table if not exists  grh_worker(
id integer PRIMARY KEY AUTO_INCREMENT,
firstname varchar(60),
lastname varchar(60),
date_birth timestamp,
profile_picture varchar(200),
address varchar(60),
mail varchar(60),
statut integer (1) DEFAULT 1,
create_date timestamp DEFAULT CURRENT_TIMESTAMP
)
[/q9]

[q10]
 create table if not exists grh_folder(
id integer PRIMARY KEY AUTO_INCREMENT,
id_worker integer,
workerstation_id integer,
label varchar(60),
description text,
foreign key (id_worker) references grh_worker(id),
foreign key (workerstation_id) references grh_workerstation(id),
statut integer (1) DEFAULT 1,
create_date timestamp DEFAULT CURRENT_TIMESTAMP
)
[/q10]

[q11]
 create table if not exists grh_mobile(
id integer PRIMARY KEY AUTO_INCREMENT,
id_worker integer,
number integer,
foreign key (id_worker) references grh_worker(id),
statut integer (1) DEFAULT 1,
create_date timestamp DEFAULT CURRENT_TIMESTAMP
)
[/q11]

[q12]
 create table if not exists grh_clockingtime(
id integer PRIMARY KEY AUTO_INCREMENT,
id_worker integer,
arrive_timing timestamp,
depart_timing timestamp DEFAULT CURRENT_TIMESTAMP,
foreign key (id_worker) references grh_worker(id),
statut integer (1) DEFAULT 1,
create_date timestamp DEFAULT CURRENT_TIMESTAMP
)
[/q12]

[q13]
create table if not exists grh_worker_badge_assoc(
id integer PRIMARY KEY AUTO_INCREMENT,
id_worker integer,
id_badge integer,
periods varchar(60),
quantite integer DEFAULT 1,
foreign key (id_worker) references grh_worker(id),
foreign key (id_badge) references grh_badge(id),
statut integer DEFAULT 1,
create_date timestamp DEFAULT CURRENT_TIMESTAMP
)
[/q13] 

[q14]
create table if not exists grh_worker_event_assoc(
id integer PRIMARY KEY AUTO_INCREMENT,
id_worker integer,
id_event integer,
start timestamp,
end timestamp DEFAULT CURRENT_TIMESTAMP,
justify varchar(60),
foreign key (id_worker) references grh_worker(id),
foreign key (id_event) references grh_event(id),
statut integer (1) DEFAULT 1,
create_date timestamp DEFAULT CURRENT_TIMESTAMP
)
[/q14] 

[q15]
create table if not exists grh_worker_workerstation_assoc(
id integer PRIMARY KEY AUTO_INCREMENT,
id_worker integer,
id_workerstation integer,
start_date timestamp,
end_date timestamp DEFAULT CURRENT_TIMESTAMP,
foreign key (id_worker) references grh_worker(id),
foreign key (id_workerstation) references grh_workerstation(id),
statut integer (1) DEFAULT 1,
create_date timestamp DEFAULT CURRENT_TIMESTAMP
)
[/q15] 


[q16]
 create table if not exists  grh_document(
id integer PRIMARY KEY AUTO_INCREMENT,
id_worker integer,
document_type varchar(300),
document_store_path varchar(300),
statut integer (1) DEFAULT 1,
foreign key (id_worker) references grh_worker(id),
create_date timestamp DEFAULT CURRENT_TIMESTAMP
)
[/q16]


[q17]
 create table if not exists  grh_document_folder_assoc(
id integer PRIMARY KEY AUTO_INCREMENT,
id_document integer,
id_folder integer,
statut integer (1) DEFAULT 1,
foreign key (id_document) references grh_document(id),
foreign key (id_folder) references grh_folder(id),
create_date timestamp DEFAULT CURRENT_TIMESTAMP
)
[/q17]

[q18]
 create table if not exists grh_config(
id integer PRIMARY KEY AUTO_INCREMENT,
config_name varchar(60),
config_value text
)
[/q18]

[q19]
 create table if not exists grh_notification(
id integer PRIMARY KEY AUTO_INCREMENT,
worker_id integer,
message text,
shared integer(1) DEFAULT 0,
statut integer (1) DEFAULT 1,
create_date timestamp DEFAULT CURRENT_TIMESTAMP,
foreign key (worker_id) references grh_worker(id)
);
[/q19]

#L'enregistrement des droit par defaut
[ir]
insert into grh_right(name_right) values 
("Admin"),
("Hr Director"),
("Boss"),
("Worker"),
("Clocking Master"),
("Events Master"),
("Archivist"),
("Invited User");
[/ir]

[status]
insert into grh_status(type) values 
("Intern"),
("Employee"),
("Appliant");
[/status]

[event]
insert into grh_event(title) values 
("Wedding"),
("Burrial"),
("Pregnancy");
[/event]

#enregistrement des badges
[badge]
insert into grh_badge(description,icon) values 
("Employe de l'annee","app/res/employe_annee.png"),
("Employe le plus ponctuelle","app/res/employe_ponctuel.png"),
("Employe avec tableau d'honneur","app/res/tableau_d'honneur.png");
[/badge]

[ic]
insert into grh_config(config_name, config_value) values 
	("db_version", "0.0.0.0"),
	("company_name", "G. Center Burkina"),
	("company_ifu", "-"),
	("company_phone", "+226 74 91 21 62"),
	("company_mail", "contact@gcenterburkina.com"),
	("mon_mor", "08:00"),
	("mon_eve", "17:00"),
	("tue_mor", "08:00"),
	("tue_eve", "17:00"),
	("wed_mor", "08:00"),
	("wed_eve", "17:00"),
	("thu_mor", "08:00"),
	("thu_eve", "17:00"),
	("fri_mor", "08:00"),
	("fri_eve", "17:00"),
	("sat_mor", "08:00"),
	("sat_eve", "17:00"),
	("sun_mor", "08:00"),
	("sun_eve", "17:00"),
	("age_min", "18"),
	("age_max", "50");
[/ic]


#	role:
#		Creates the database